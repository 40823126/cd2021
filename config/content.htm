<h1>About</h1>
<p>This is <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></p>
<p>目前的 cmsimde 在編輯器下方新增一個 csave 按鈕, 意即 collabrative save, 當動態網際管理系統在多人同時維護登入維護網頁內容時, 編輯各頁面時段, 該頁面可能已經改版, 因此使用 csave 按鈕存檔時, 會導入當下最新的該頁面內容, 並試圖與編輯中的頁面內容進行合併.</p>
<p>使用 csave 按鈕存檔無法刪除頁面資料.</p>
<h1>每周進度</h1>
<h2>w1</h2>
<p>建立倉儲 建立網頁</p>
<p><span>進入到 </span><a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a><span> </span></p>
<p><span>按下綠色框框的 Use this template<span> </span></span></p>
<p><span><span><img alt="" height="65" src="/images/use.jpg" width="516"/></span></span></p>
<p><span><span>建立倉儲</span></span></p>
<p><span><span><img alt="" height="252" src="/images/w1.2.jpg" width="513"/></span></span></p>
<p><span><span>接著進到 tmp下 輸入 git clone --recurse-submodules<span>https://github.com/mdecourse/cmstemplate.git </span></span></span></p>
<p><span><span></span></span></p>
<p><span><span>再來就是進到 tmp/cd2021/cmsimde/ 輸入python wsgi.py 即可進入網站</span></span></p>
<p><span><span>輸入 <a>https://localhost:9443</a><span>  </span></span></span></p>
<p><span><span><span>密碼:admin</span></span></span></p>
<h2>w2</h2>
<p><img alt="" height="222" src="/images/水車底座.jpg" width="412"/></p>
<p>上圖為動力水車的基底 </p>
<p><img alt="" height="220" src="/images/水車葉片圖.jpg" width="411"/></p>
<p>上圖為動力水車的傳動葉片 將其分成六等分</p>
<p><img alt="" height="219" src="/images/組合.jpg" width="408"/></p>
<p>上圖為動力水車的組合圖</p>
<h2>w3</h2>
<p>分組網站發生錯誤  進行更正</p>
<p><img alt="" height="139" src="/images/更正.jpg" width="420"/></p>
<h2>w4</h2>
<p>分組上台報告</p>
<p><img alt="" height="227" src="/images/w4.jpg" width="424"/></p>
<h2>w5</h2>
<p>第五周進行stage2-ag3分組</p>
<p>組別<a href="https://40823128.github.io/stage2-ag3/content/index.html"> https://40823128.github.io/stage2-ag3/content/index.html</a></p>
<p>組員:</p>
<p><a href="http://40623234-1.github.io/cd2021">http://40623234-1.github.io/cd2021</a></p>
<p>楊育翔 <a href="http://40823126.github.io/cd2021">http://40823126.github.io/cd2021</a></p>
<p>曾鑵斁 <a href="http://40823128.github.io/cd2021">http://40823128.github.io/cd2021</a></p>
<p></p>
<h2>w6</h2>
<p>建立分組網頁 並且進行網頁同步</p>
<h2>w7</h2>
<p>決定專案主題: 自動砂帶機</p>
<p>製作理念: 由於砂帶機還需要人工操作 砂帶滾動時有危險性 所以想增加夾具 讓砂帶機可以自動操作</p>
<p>來避免手直接接觸 降低危險性 使工作環境更加安全</p>
<p>以下為自動砂帶機示意圖</p>
<p><img alt="" height="334" src="/images/砂帶機.jpg" width="401"/></p>
<p><img alt="" height="270" src="/images/砂帶機結構.jpg" width="398"/></p>
<h2>w8</h2>
<p>使用solidwork製作砂帶機構圖</p>
<p>砂帶機底座</p>
<p><img alt="" height="228" src="/images/砂待機底座平面.jpg" width="405"/></p>
<p>砂帶機底座+平板滾輪支架 以及在平板上做孔</p>
<p><img alt="" height="228" src="/images/砂帶機平板做孔2.jpg" width="405"/></p>
<p>砂帶機滾輪 中間為固定皮帶的凹槽</p>
<p><img alt="" height="228" src="/images/砂帶機滾輪.jpg" width="406"/></p>
<p>砂帶機底座改版</p>
<p><img alt="" height="222" src="/images/2.0.jpg" width="413"/></p>
<p>砂帶機夾持工具:虎鉗</p>
<p><img alt="" height="222" src="/images/虎鉗.jpg" width="412"/></p>
<h2>w9</h2>
<p>期中考周----期中上台報告</p>
<h2>w10</h2>
<p>進行stage3-ag5分組實習</p>
<p>本周進行小組網站同步</p>
<p>小組網站 <a href="https://40823126.github.io/stage3-ag5-1/content/index.html">https://40823126.github.io/stage3-ag5-1/content/index.html</a></p>
<h2>w11</h2>
<p>每個禮拜由各組按照組員順序  於每堂課程時段  由兩到三名學員啟動 OBS+youtube 直播 【每個禮拜每位學員都需要輪流負責直播工作項目內容】  首先先將直播 URL 公布於gitter上 以展示在這時段本組對 stage3 分組專題工作項目的協同過程  【就是每個禮拜各組在上課時段都會有協同設計影片分別嵌入負責直播錄影的組員的網頁還有分組網頁】</p>
<p> 在直播開始前各直播組員2~3名組員應先規劃工作項目的網際簡報資料  </p>
<p> 當其他組在執行stage3分組專題內容碰到問題的時候可以按照下列步驟解決問題:</p>
<ol>
<li>利用協同上課直播錄影時段  簡述網際簡報資料 清楚說明所遭遇的問題情境</li>
<li>將影片上傳並嵌入個人網站與分組網站後  根據問題描述影片內容  尋求其他組在其分段直播時段說明如何解題</li>
</ol>
<p>各組員在進行 stage3 分組專題期間  都應該協同負責從<span>零組件設計繪圖  </span><span>零件轉檔 </span> 零組件轉入<span> </span><span>CoppeliaSim 進行設定 </span><span> </span><span>Lua 監控 </span><span> </span><span>Python 監控 </span><span> </span><span>直播錄影</span><span>  </span>ssh 維護個人<span>網站 </span> 並協同參與維護<span>分組網站</span>等工作項目  </p>
<p>開啟直播: 將直播投影片直播的連結放在<span> </span><a href="https://gitter.im/mdecourse/cd2021">https://gitter.im/mdecourse/cd2021</a></p>
<h2>w12</h2>
<h2>w13</h2>
<h2>w14</h2>
<p>task 4</p>
<ol>
<li>利用 SolidWorks, Inventor, NX, Onshape 或 Solvespace 繪製機械手臂零組件後, 分別以 ASCII STL 或 Binary STL 手動轉入 Coppeliasim 建立機械手臂 .ttm 模型檔備用</li>
<li>根據 CoppeliaSim 4.1.0 版中的<span> </span><a href="https://www.coppeliarobotics.com/helpFiles/en/xmlFormat.htm">XML simplescene 格式</a>, 利用 Python 程式建立所需的機械手臂 .ttm 模型檔備用</li>
<li>根據 RoKiSim 中的六軸機械手臂定義, 以 Python 程式, 將原本有的 Industrial Robots STL 轉成CoppeliaSim simplexml 模型格式備用</li>
<li>將上述完成的機械手臂模型導入場景後, 機械手臂末端利用 force sensor 接上 components/grippers/suction pad.ttm tool 後, 先完成 MTB Robot 取放 Block 範例的改寫, 再完成<span> </span><a href="https://www.fanuc.eu/it/en/robots/robot-filter-page/m-710-series/m-710ic-50">FANUC M-710iC/50</a><span> </span>機械手臂的<a href="https://www.youtube.com/watch?v=3EqzMzszMV0">圓球取放範例</a>.</li>
</ol>
<h2>w15</h2>
<p>運動學講解</p>
<p>【運動學1】</p>
<p><a href="https://youtu.be/IKOGwoJ2HLk">https://youtu.be/IKOGwoJ2HLk</a></p>
<p>字幕</p>
<p>We saw this simple two-link robot in the previous lecture about forward kinematics.</p>
<p>我們在上一堂關於正向運動學的課程中看到這個簡單的雙連桿機構。</p>
<p>Kinematics : 運動學</p>
<p>The tooltip pose of this robot is described simply by two numbers, the coordinates x and y with respect to the world coordinate frame.</p>
<p>該機構的提示框由兩個數字簡單描述，相對於絕對坐標系的坐標 x 和 y。</p>
<p>So, the problem here is that given x and y, we want to determine the joined angles, q1 and q2.</p>
<p>所以，這裡的問題是有了x和y條件，我們要求解連接角q1和q2的值為多少。</p>
<p>The solution that we’re going to follow in this particular section is a geometric one.</p>
<p>我們利用特定幾何來解決這個問題。</p>
<p>We’re going to start with a simple piece of construction.</p>
<p>我們從一個簡單的結構開始。</p>
<p>We’re going to overlay the red triangle on top of our robot.</p>
<p>我們將在機構上覆蓋紅色三角形。</p>
<p>We know that the end point coordinate is x, y, so the vertical height of the triangle is y, the horizontal width is x.</p>
<p>我們知道最終坐標是x，y，所以三角形的垂直高度為y，水平寬度為x。</p>
<p>And, using Pythagoras theorem, we can write r squared equals x squared plus y squared.</p>
<p>然後，利用Pythagorean theorem(畢氏定理)，我們可寫出 r² = x ²+ y²。</p>
<p>So far, so easy.</p>
<p>到目前為止都很容易。</p>
<p>Now, w’re going to look at this triangle highlighted here in red and we want to determine the angle alpha.</p>
<p>現在，我們查看此處凸顯的紅色三角形，並且要確定α角。</p>
<p>(α=alpha)</p>
<p>In order to do that, we need to use the cosine rule.</p>
<p>為了做到這一點，我們須使用餘弦定理。<br/>(餘弦=cosine)</p>
<p>And, if you’re a little rusty on the cosine rule, here is a bit of a refresher.</p>
<p>如果你對餘弦定理有點生疏，這裡可以幫助你複習一下。</p>
<p>We have an arbitrary triangle.</p>
<p>有一個任意三角形。</p>
<p>We don’t have any right angles in it and we’re going to label the length of this edge as A and the angle opposite that edge, we’re going to label as little a.</p>
<p>三角形中沒有任何的直角，將這邊的角度標為小a，而對邊的長度標為A。</p>
<p>And, we do the same for this edge and this angle, and this edge and this angle.</p>
<p>我們再對這邊和這個角，以及這邊和這個叫做同樣的事。</p>
<p>So, all together, the sides are labelled capitals A, B and C, and the angles are labelled little a, little b, and little c.</p>
<p>以此類推，所有邊都標記為A, B, C，角都標記為a, b, c 。</p>
<p>So, the cosine rule is simply this relationship here.</p>
<p>餘弦定理就是這種關係。</p>
<p>It’s a bit like Pythagoras’ theorem except for this extra term on the end with the cos a in it.</p>
<p>它有點像畢達哥拉斯定理，不同之處是末端多出了cos a。</p>
<p>Now, let’s apply the cosine rule to the particular triangle we looked at a moment ago.</p>
<p>將餘弦定理套用於剛剛看到的特定三角形。</p>
<p>It’s pretty straightforward to write down this particular relationship.</p>
<p>寫下此特殊關係很簡單。</p>
<p>We can isolate the term cos alpha which gives us the angle alpha that we’re interested in.</p>
<p>我們可分離出 cosα ，只需要得知α角度作為條件。</p>
<p>And, it’s defined in terms of the constant link lengths, A1 and A2 and the position of the end effector, x and y.</p>
<p>它是根據恆定連桿長度A1和A2以及最終執行器的位置x和y定義。</p>
<p>We can write this simple relationship between the angles alpha and q2.</p>
<p>我們可寫出角度α和q2之間的簡單關係。</p>
<p>And, we know from the shape of the cosine function that cos of q2 must be equal to negative of cos alpha.</p>
<p>並且我們從餘弦函數中得知cos q2必須等於 –cos α。</p>
<p>This time, let’s just write an expression for the cosine of the joined angle q2.</p>
<p>這次寫出餘弦在連接角q2的表達式。</p>
<p>Now, we’re going to draw yet another red triangle and we’re going apply some simple trigonometry here.</p>
<p>我們繪製另一個紅色三角形，並應用三角函數。</p>
<p>If we know q2, then we know this length and this length of the red triangle.</p>
<p>如果我們知道q2，就可知道這個長度和這個三角形的長度。</p>
<p>We can write this relationship for the sine of the joined angle q2.</p>
<p>我們可以在連接角q2寫出正弦關係。</p>
<p>Now, we can consider this bigger triangle whose angle is beta and this side length of this triangle is given here in blue.</p>
<p>現在我們考慮這個大一點的三角形，它角度是β，此三角形的邊長由藍色表示。</p>
<p>(β=beta)</p>
<p>And, the length of the other side of the triangle is this.</p>
<p>且三角形另一邊長度是這個。</p>
<p>So, now we can write an expression for the angle beta in terms of these parameters here.</p>
<p>我們可在此根據參數寫出角度β的表達式。</p>
<p>Going back to the red triangle that we drew earlier, we can establish a relationship between q1 and the angle beta.</p>
<p>回到之前畫的紅色三角形，我們可建立出q1和β的關係。</p>
<p>Introduce yet another angle, this one gamma and we can write a relationship between the angle gamma and the tooltip coordinates x and y.</p>
<p>引入另一個角度ɣ，可寫出角度ɣ和提示框座標x和y之間的關係。</p>
<p>(ɣ=gamma)</p>
<p>Now, we can write a simple relationship between the angles that we’ve constructed, gamma and beta and the joined angle we’re interested in which is q1.</p>
<p>現在我們可建構出角度β和ɣ與連接角度q1之間的關係。</p>
<p>And, the total relationship looks something like this.</p>
<p>而且，整個關係看起來像這樣。</p>
<p>Quite a complex relationship, it gives us the angle of joined one, that’s q1 in terms of the end effector coordinates y and x, and a bunch of constants, a1 and a2, and it’s also a function of the second joint angle, q2.</p>
<p>相當複雜的關係，它提供連接的角度，即最終執行器坐標 y 和 x 的 q1，以及一系列常數 a1 和 a2，它也是第二個關節角度 q2 的函數。</p>
<p>So, let’s summarize what it is that we have derived here.</p>
<p>所以，總結我們在這裡得出了什麼。</p>
<p>We have an expression for the cosine of q2 and we have an expression for q1.</p>
<p>我們有q2餘弦方程式與q1方程式。</p>
<p>Now, the cosine function is symmetrical about 0.</p>
<p>餘弦函數在0對稱。</p>
<p>So, if we know the value of the cosine of q2, then there are two possible solutions a positive angle and a negative angle.</p>
<p>所以我們知道cosq2的值可能為正角和負角。</p>
<p>We’re going to explicitly choose the positive angle. Which means that I can write this expression here.</p>
<p>我們選擇正角，表示我可以寫出此表達式。</p>
<p>And now, we have what we call the inverse kinematic solution for this two-link robot.</p>
<p>現在我們能用逆向運動學來解決雙連桿機構。</p>
<p>(逆向運動學=inverse kinematic,IK)</p>
<p>We have an expression for the two joined angles, q1 and q2 in terms of the end effector pose x and y, and a bunch of constants.</p>
<p>我們有兩個連接角 q1 和 q2 的表達式，根據最終執行器的x 和 y 以及一系列常數。</p>
<p>You notice that the two equations are not independent.</p>
<p>你要注意到兩方程式不是獨立的。</p>
<p>The equation for q1, in fact, depends on the solution for q2.</p>
<p>事實上，q1方程式取決於q2的解。</p>
<p>In this case, q2 is negative and we’re going to write the solution for q2 with a negative sign in front of the inverse cosine.</p>
<p>在這情況下，q2為負，我們將在q2反餘弦的解前面加上負號。</p>
<p>Now, we need to solve for q1, so we’re going to introduce this particular red triangle, the angle beta that we solved previously, and the angle gamma which is defined in terms of y and x.</p>
<p>我們需求解q1，因此采用這個特定的三角形，之前求解的角度β以及根據y和x定義的角度ɣ。</p>
<p>Now, we write a slightly different relationship between q1, gamma and beta, different to what we had before.</p>
<p>q1、ɣ和β之間的關西，和之前求的不同。</p>
<p>There’s a change of sign involved.</p>
<p>涉及到符號的變化。</p>
<p>Then, we can substitute all that previous equation and come up with this expression for q1.</p>
<p>然後我們可代換之前所有等式，並求得此q1方程式。</p>
<p>Again, there is a change of sign here.</p>
<p>同樣，這裡的符號發生了變化。</p>
<p>Previously, this was a negative sign.</p>
<p>先前，這是個負號。</p>
<p>And, here in summary form is the solution for the inverse kinematics of our two-link robot when it is in this particular configuration, where q2 is negative.</p>
<p>這是雙連桿機構在此逆向運動學的總形式，其中q2為負。</p>
<p>Let’s compare the two solutions, the case where q2 is positive and the case where q2 is negative.</p>
<p>讓我們比較兩個解決方案，q2為正和q2為負的情況。</p>
<p>【運動學2】</p>
<p><a href="https://youtu.be/eIZuz1XCd0w">https://youtu.be/eIZuz1XCd0w</a></p>
<p>Here we have the same two link robot as we just looked at but this time we're going tosolve it using an analytical approach , that is we're going to rely much more on algebra ,particular linear algebra rather than geometry .</p>
<p>在這裡，我們有與前一篇相同的兩連桿機械手臂，但這次我們將使用分析方法來解決它，意味著我們將更多地依賴代數，特別是使用線性代數而不是幾何。</p>
<p>We have an expression E , which is the homogeneous transformation which represents the pose of the robots endefector and we looked at this in the last lecture , we can write the endefector pose as a sequence of elementary homogeneous transformations .</p>
<p>我們有一個表達式 E，它是表示機械手臂最終位置的齊次變換式，我們在上一課中看到了這一點，我們可以將最終位置寫為一系列基本齊次變換式。</p>
<p>A rotation by Q1 , a translation along the X direction by A1 , a rotation by Q2 and then a translation in the X direction by A2 .</p>
<p>Q1 旋轉，A1 沿 X 方向平移，Q2 旋轉，然後 A2 沿 X 方向平移。</p>
<p>If I expand this out , multiply all the transformations together , I get the expression shown here ; a three by three homogeneous transformation matrix representing the pose of the robot's endefector.</p>
<p>如果我將其展開，將所有變換相乘，就會得到此處所示的表達式 E ;它是一個三乘三的齊次變換矩陣，表示機械手臂的最終的位置。</p>
<p>Now for this particular two link robot , we are only interested in the position of its endefector , it's X and Y co - ordinate and they are these two elements within the homogeneous transformation matrix , so I'm going to copy those out .</p>
<p>現在對於這個特殊的兩連桿機器人，我們只對它的最終位置感興趣，與它有關的是 X 和 Y 坐標，它們是齊次變換矩陣中的這兩個元素，所以我將把它們複製出來。</p>
<p>So here again is our expression for X and Y and what we're going to do is a fairly common trick , we're going to square and add these two equations and I get a relationship that looks like this .</p>
<p>所以這裡又是我們對 X 和 Y 的表達式，我們要做的是一個相當常見的技巧，我們要將它平方並將這兩個方程相加，我得到一個看起來像這樣的關係式。</p>
<p>Now I can solve for the joint angle Q2 in terms of the endefector pose X and Y and the robot's constants A1 and A2.</p>
<p>現在我可以根據最終位置X和Y以及機械手臂的常數A1及A2來求出關節角度Q2。</p>
<p>Now what I'm going to do is apply the sum of angles identity .</p>
<p>現在我要做的是應用角度之和的特性。</p>
<p>I'm going to expand these terms, sine of Q1 plus Q2 or cos of Q1 plus Q2 and to make life a little bit easier, I'm going to make some substations, so where ever I had cos Q2, I'm going to write C2 and where ever I had sine Q2, I'm going to write S2.</p>
<p>我將展開這些項，Q1 的正弦加 Q2 或 Q1 的餘弦加 Q2，為了讓生活更輕鬆一點，我將建立一些分部，所以只要有 cos Q2，我會將其取代為C2並且在有正弦Q2的地方，我會將其取代為S2。</p>
<p>It's a fairly common shorthand when people are looking at robot kinematic equations.</p>
<p>當人們解決機械手臂運動學方程式時，這是一個相當常見的快速記法。</p>
<p>And here are the equations after making those substitutions.</p>
<p>這是進行替換後的方程式。</p>
<p>Looking at these two equations, I can see that they fall into a very well known form and for that form there is a very well known solution.</p>
<p>看看這兩個方程式，我可以看到它們屬於一個眾所周知的形式，對於這種形式，有一個淺顯易見的解決方案。</p>
<p>So I'm going to consider just one of the equations, the equation for Y and using our well known identity and it's solution, I can determine the values for the variables little a, little b and little c and once l've determined those, then I can just write down the solution for Q1, which x is the equivalent of theta in this particular case.</p>
<p>所以我將只考慮其中一個方程，Y 的方程，並使用我們眾所周知的恆等式和它的解，我可以確定變量小 a、小 b 和小 c 的值，一旦我確定了這些，然後我可以寫下 Q1 的解決方程，在這種特殊情況下，x 相當於 theta。</p>
<p>Here again is our expression for Q1, copied over from the previous slide and we may remember from earlier in our workings that we determined this particular relationship; X squared plus Y squared is equal to this particular complex expression.</p>
<p>這裡再次是我們對 Q1 的表達，從上一張幻燈片複製過來，我們可能還記得在我們早期的說明中，確定了這種特殊關係； X 平方加 Y 平方等於這個特定的複雜表達式。</p>
<p>So I can substitute that in and do some simplification and I end up with this slightly less complex expression for Q1.</p>
<p>因此，我可以將其替換並進行一些簡化，最終得到 Q1 的這個稍微不那麼複雜的表達式。</p>
<p>And it is the same expression that I got following the geometric approach in the previous section.</p>
<p>這與我在上一節中遵循幾何方法求出的表達式一模一樣。</p>
<h2>w16</h2>
<p>製作個人作業</p>
<h4>MTB_robot 的取放方塊流程規劃 rocess Planning</h4>
<h4>1. Onshape 零組件繪製 </h4>
<p></p>
<h4>2. 建立 CoppeliaSim 4.1.0 MTB robot 場景 </h4>
<p></p>
<h4>3. 手臂末端加入 components-gripper-suction pad 吸盤</h4>
<p></p>
<h4>4. 逆向運動學函式 </h4>
<p></p>
<h4>5. Python remote API 逆向運動學函式 </h4>
<h2>w17</h2>
<p>使用onshape繪製機械手臂</p>
<p><img alt="" height="193" src="/images/圖1.jpg" width="359"/></p>
<p>onshape繪製過程影片</p>
<p><a href="https://youtu.be/w8YXJLptDj4">https://youtu.be/w8YXJLptDj4</a></p>
<p>建立 coppeliaSim 4.1.0 MTB Robot場景</p>
<p><img alt="" height="194" src="/images/圖2.jpg" width="362"/></p>
<p><span>coppeliaSim 4.1.0 MTB Robot場景介紹</span></p>
<p><a href="https://www.youtube.com/watch?v=0NXudrXS1jw">https://www.youtube.com/watch?v=0NXudrXS1jw</a></p>
<p></p>
<h4></h4>